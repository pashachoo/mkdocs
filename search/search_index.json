{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to TeamDominant wiki","text":"<p>Warning</p> <p>Little disclaimer. Some information was copied from virtualize.link, because I find information provided by its author useful. Make sure to check the source or star the repo.</p>"},{"location":"#software","title":"Software","text":"<ul> <li>Apps</li> <li>Discord</li> <li>Firefox</li> <li>Telegram</li> </ul>"},{"location":"#network","title":"Network","text":"<ul> <li>3x-ui</li> <li>Nekoray</li> <li>Streisand</li> </ul>"},{"location":"#server","title":"Server","text":"<ul> <li>Askubuntu</li> <li>DNS for Containers</li> <li>Nextcloud</li> <li>SWAG</li> <li>Geoblock</li> <li>Jfscan</li> </ul>"},{"location":"#other","title":"Other","text":"<ul> <li>Archlinux</li> <li>iPhone</li> <li>Nothing Phone </li> <li>Wush</li> </ul>"},{"location":"3x-ui/","title":"3x-ui","text":"<p>Danger</p> <p>Don't pay for the \"private\" guides, no one will tell you anything more, because there is no more functionality.</p>"},{"location":"3x-ui/#setup-used","title":"Setup used","text":"<p>The setup was used in my case:</p> <ul> <li>OS: Ubuntu 22.04.5</li> <li>3x-ui Version: 2.4.11</li> <li>VPS: A\u00e9za</li> </ul>"},{"location":"3x-ui/#installation","title":"Installation","text":"<p>As soon as we log into the system after purchasing a VPS, we execute the following commands:</p> <ol> <li> <p><pre><code>apt update &amp;&amp; apt upgrade -y\n</code></pre> to install all updates</p> </li> <li> <p><pre><code>openssl req -x509 -keyout /etc/ssl/certs/3x-ui.key -out /etc/ssl/certs/3x-ui.pem -newkey rsa:4096 -sha256 -days 3650 -nodes -new\n</code></pre> where .pem is the public key, and .key is the private key. Just keep pressing Enter, no need to fill anything in.</p> </li> <li> <p><pre><code>bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n</code></pre> to install the panel itself</p> </li> <li> <p><code>Would you like to customize the Panel Port settings? (If not, a random port will be applied)</code> we answer N.</p> </li> <li> <p>Click on the link in the \"Access URL\" line to access our panel. Enter the credentials generated for us after the installation.</p> </li> <li> <p>Go to Panel Settings, then to the Authentication section, and change the login details. In the General section, specify the path to the already created Public &amp; Private keys:  public key<pre><code>/etc/ssl/certs/3x-ui.pem\n</code></pre> private key<pre><code>/etc/ssl/certs/3x-ui.key\n</code></pre> Scroll up, click Save, and restart the panel.</p> </li> </ol>"},{"location":"3x-ui/#securing-and-little-tweaks","title":"Securing and little tweaks","text":""},{"location":"3x-ui/#ssh","title":"Ssh","text":"<p>Changing ssh port is required since ISPs scan for open ports and trying to detect such VPS machine, which you use as proxy.</p> <pre><code>nano /etc/ssh/sshd_config\n</code></pre> <p>All you need to is uncomment line 14 and change your port. You can change the port to the one you like the most, just make sure it's not used by other services. Final result looks like:</p> sshd_config<pre><code>Port 222\n#AddressFamily any\n#ListenAddress 0.0.0.0\n#ListenAddress ::\n</code></pre> <p>Then, you need to reload services:</p> <pre><code>systemctl daemon-reload\n</code></pre> <pre><code>systemctl restart ssh\n</code></pre> <p>Warning</p> <p>Make sure your ufw is NOT running, so you can connect after you decide to reconnect. If you forgot to do add new port to ufw, then access your VPS by using VNC and make changes.</p>"},{"location":"3x-ui/#fail2ban","title":"Fail2ban","text":"<pre><code>apt install fail2ban -y &amp;&amp; apt install ufw -y\n</code></pre> <p>After runnig <code>touch /etc/fail2ban/jail.local &amp;&amp; nano /etc/fail2ban/jail.local</code> Copy and paste (ctrl + shift + v):</p> jail.local<pre><code>[sshd]\nenabled = true\nfilter = sshd\naction = iptables[name=SSH, port=ssh, protocol=tcp]\nlogpath = /var/log/auth.log\nfindtime = 600\nmaxretry = 1\nbantime = 43200\n</code></pre> <p>Press Ctrl+X, then Y, and hit Enter to save and exit.</p> <p>In the terminal, type:</p> <pre><code>x-ui\n</code></pre> <p>Type 20 (IP Limit Management) and press Enter. Then press 1 to install and type Y.</p>"},{"location":"3x-ui/#ufw","title":"Ufw","text":"<pre><code>nano /etc/ufw/before.rules\n</code></pre> <p>Change the values from <code>ACCEPT</code> to <code>DROP</code> and add new string, also with <code>DROP</code> value:</p> before.rules<pre><code># ok icmp codes for INPUT\n-A ufw-before-input -p icmp --icmp-type destination-unreachable -j DROP\n-A ufw-before-input -p icmp --icmp-type time-exceeded -j DROP\n-A ufw-before-input -p icmp --icmp-type parameter-problem -j DROP\n-A ufw-before-input -p icmp --icmp-type echo-request -j DROP\n-A ufw-before-input -p icmp --icmp-type source-quench -j DROP\n\n# ok icmp code for FORWARD\n-A ufw-before-forward -p icmp --icmp-type destination-unreachable -j DROP\n-A ufw-before-forward -p icmp --icmp-type time-exceeded -j DROP\n-A ufw-before-forward -p icmp --icmp-type parameter-problem -j DROP\n-A ufw-before-forward -p icmp --icmp-type echo-request -j DROP\n</code></pre> <p>Press Ctrl+X, then Y, and hit Enter to save and exit.</p> <p>Restart the ufw:</p> <pre><code>ufw disable &amp;&amp; ufw enable\n</code></pre> <p><pre><code>apt install net-tools\n</code></pre> <pre><code>netstat -ntlp | grep LISTEN\n</code></pre> Open the ports you need (SSH, 3x-ui, 443, and any others if you have additional services). <pre><code>ufw disable &amp;&amp; ufw allow 222/tcp &amp;&amp; ufw allow 443/tcp &amp;&amp; ufw allow {panel_port} &amp;&amp; ufw enable\n</code></pre></p>"},{"location":"3x-ui/#bbr","title":"BBR","text":"<ol> <li> <p>In the terminal, type <pre><code>x-ui\n</code></pre></p> </li> <li> <p>Type 23 (Enable BBR) and select 1 (Enable BBR).</p> </li> </ol>"},{"location":"3x-ui/#ssl-management","title":"SSL Management","text":"<p>Warning</p> <p>This step is only required if you don't want to use the least secure connection. If you don't really care, move to the next step: Reality.</p> <p>First, let's open open <code>80/tcp</code> for some time:</p> <pre><code>ufw allow 80/tcp\n</code></pre> <p>Next, move the x-ui panel:</p> <pre><code>x-ui\n</code></pre> <p>and then select SSL Management (18). Press 1 to Get SSL.</p> <p>Warning</p> <p>On this step you may face the 404 error because speedtest-cli is not available for Ubuntu 24.04. Remove the repo from apt repos by using this guide.</p> <p>Enter your domain, default port - 80, wait until the certificate is created and then agree to set certificate for the panel.</p> <p>Leave port <code>80/tcp</code> is not secure, so let's make a crontab for it:</p> <pre><code>crontab -e\n</code></pre> crontab<pre><code>0 23 * * * ufw allow 80/tcp &amp;&amp; \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" &gt; /dev/null &amp;&amp; ufw deny 80/tcp\n</code></pre>"},{"location":"3x-ui/#setting-up","title":"Setting up","text":""},{"location":"3x-ui/#reality","title":"Reality","text":"<p>Note</p> <p>Easy, but less secure. Doesn't require SSL Management to be set up.  </p> <ul> <li>Protocol: <code>vless</code></li> <li>Port: <code>443</code></li> <li>Client: <code>Enabled</code></li> <li>Email = <code>email</code> or <code>username</code></li> <li>Security: <code>Reality</code></li> <li>uTLS: <code>chrome/firefox</code></li> <li>Dest \u0438 SNI: <ul> <li>Sweden: <code>teamdocs.su</code></li> <li>Germany: <code>wikiportal.su</code></li> <li>Moscow: <code>docscenter.su</code></li> </ul> </li> </ul> <p>If port <code>443</code> is used, then:</p> <ul> <li>Port: custom or default</li> <li>uTLS: <code>chrome/firefox/random</code> You are supposed to test it yourself because it works differently on each VPS, ISP, and even OS.  </li> </ul> <p>Click on the QR code icon next to the created client, then click the QR code to copy it to the clipboard, and paste it into Nekoray/Streisand.</p>"},{"location":"3x-ui/#tls","title":"TLS","text":"<p>Install nginx first:</p> <pre><code>apt install nginx\n</code></pre> <p>and then change its default config:</p> <pre><code>nano /etc/nginx/sites-enabled/default\n</code></pre> <p>Make the changes to file:</p> <pre><code># Default server configuration\n#\nserver {\n        listen 127.0.0.1:8080 default_server;\n\n        # SSL configuration\n        #\n        # listen 443 ssl default_server;\n        # listen [::]:443 ssl default_server;\n</code></pre> <p>Test the nginx by using: <pre><code>nginx -t\n</code></pre></p> <pre><code>systemctl reload nginx\n</code></pre> <p>Settings inside the 3x-ui panel for inbound:  </p> <ul> <li>Port: <code>443</code></li> <li>Add fallback. Dest: <code>8080</code> </li> <li>uTLS: <code>None</code> (?)</li> <li>Security: <code>TLS</code> </li> <li>ALPN: <code>http/1.1</code> </li> <li>Set cert from panel  </li> <li>Sniffing: <code>Enabled</code> (?)  </li> </ul> <p>Create a webpage for correct work. Let's ask an AI to create a webpage for us.</p> <pre><code>nano /var/www/html/index.html\n</code></pre> <p>Simply paste any html code and save it.  </p> <p>After its all done we need to close port <code>80/tcp</code>:</p> <pre><code>ufw deny 80/tcp\n</code></pre>"},{"location":"3x-ui/#clean-up","title":"Clean-up","text":"<p>Finally, clean up, reboot, and you're ready to use it. <pre><code>apt update &amp;&amp; apt upgrade -y &amp;&amp; apt autoclean -y &amp;&amp; apt clean -y &amp;&amp; apt autoremove -y &amp;&amp; reboot\n</code></pre></p>"},{"location":"apps/","title":"Apps","text":""},{"location":"apps/#web","title":"Web","text":"Application Description Firefox Firefox Firefox is a free and open-source web browser developed by Mozilla. Known for its speed, privacy-focused features, and customizability, it provides users with a secure and efficient browsing experience across multiple platforms, including Windows, macOS, Linux, and mobile devices. Betterfox installation is required for better experience. Betterfox Firefox user.js for speed, privacy, and security. Your favorite browser, but better. yokoffing/Betterfox fork and improved for personal preferences. Floorp Floorp is a modern, open-source browser designed for users who value speed, privacy, and convenience. Floorp incorporates enhancements from Betterfox, bringing an extra layer of performance tuning and privacy improvements."},{"location":"apps/#ssh","title":"SSH","text":"Application Description PuTTY PuTTY is a free and open-source terminal emulator and network file transfer application. It supports a variety of network protocols, including SSH, Telnet, and SCP, making it a popular tool for securely accessing and managing remote servers. PuTTY is lightweight, highly customizable, and widely used on Windows, though it is also available for other operating systems. Termius Termius is a modern and feature-rich SSH client designed for managing remote systems securely and efficiently. It supports a wide range of platforms, including Windows, macOS, Linux, iOS, and Android, enabling seamless access across devices. With features like end-to-end encryption, SFTP file transfer, and organized host grouping, Termius is ideal for developers, system administrators, and IT professionals. It also includes a sleek interface, advanced terminal capabilities, and options for syncing settings and credentials across multiple devices."},{"location":"apps/#ftp","title":"FTP","text":"Container Description FileZilla FileZilla is a free and open-source FTP client designed for efficient file transfer between local and remote systems. It supports FTP, SFTP, and FTPS protocols, providing a secure and reliable solution for website management and server maintenance. With its intuitive interface, drag-and-drop functionality, and robust file management features, FileZilla is suitable for both beginners and advanced users. It is available on Windows, macOS, and Linux platforms."},{"location":"apps/#proxy","title":"Proxy","text":"Application Description WireGuard WireGuard is a modern and highly efficient VPN protocol and software designed for secure and fast network connections. It is known for its simplicity, minimal codebase, and high performance, offering encryption standards that ensure strong privacy and data protection. WireGuard is cross-platform, working on Windows, macOS, Linux, Android, and iOS. Its lightweight design makes it easy to configure and maintain, making it a popular choice for both individuals and organizations. Nekoray Nekoray is an easy-to-use and versatile proxy client designed to simplify VPN and proxy management. It supports a range of protocols, including V2Ray, Shadowsocks and VLESS, making it ideal for bypassing restrictions and maintaining online privacy. With a clean interface, detailed configuration options, and compatibility across Windows, macOS, and Linux, Nekoray is a reliable solution for secure browsing and application-specific proxy setups."},{"location":"apps/#monitoring-and-sys-info","title":"Monitoring and sys info","text":"Application Description NeoHtop NeoHtop is a modern and visually enhanced system monitoring tool inspired by Htop. It provides real-time insights into system processes, resource usage, and performance metrics with a user-friendly interface. NeoHtop is designed for simplicity and efficiency, offering advanced features like process filtering and customizable views, making it a powerful tool for system administrators and developers. Im-sensors Im-sensors for linux, It allows displaying the CPU temperature and its cores in the console. You can check the current temperature or enable real-time temperature monitoring. HWiNFO HWiNFO is a comprehensive hardware diagnostics and monitoring tool for Windows. It provides detailed information about your system's components, including CPU, GPU, motherboard, and storage devices. With real-time performance monitoring, temperature tracking, and customizable reporting, HWiNFO is ideal for system optimization, troubleshooting, and hardware analysis. CPU-Z CPU-Z is a lightweight and free system profiling tool that provides detailed information about your computer's hardware. It displays key specifications of your CPU, motherboard, memory, and GPU, making it an essential tool for system monitoring, troubleshooting, and hardware analysis. With its user-friendly interface and accurate reporting, CPU-Z is popular among tech enthusiasts and professionals alike. CPU-G CPU-G is a lightweight and open-source system information tool designed to provide detailed insights into your computer's hardware. Similar to CPU-Z, it displays key specifications about the CPU, motherboard, memory, and more. With its focus on simplicity and cross-platform support, CPU-G is a handy utility for users looking to monitor and analyze their system's components."},{"location":"apps/#video-recording","title":"Video-recording","text":"Application Description OBS OBS (Open Broadcaster Software) is a free and open-source software for video recording and live streaming. It allows users to capture and broadcast high-quality video and audio from various sources, such as screens, webcams, and external devices. With advanced features like scene transitions, customizable layouts, and real-time video mixing, OBS is widely used by content creators, streamers, and professionals for its flexibility and performance."},{"location":"apps/#remote-access","title":"Remote access","text":"Application Description AnyDesk AnyDesk is a powerful remote desktop software that allows users to access and control computers or devices from anywhere in the world. It is widely used for remote work, IT support, and online collaboration. The application is lightweight, fast, and secure, ensuring a seamless experience for both personal and professional use. RustDesk RustDesk is an open-source remote desktop software designed to provide a secure, fast, and user-friendly experience for remote access and control. Built with privacy in mind, RustDesk allows users to set up their own server for maximum security or use the default public relay and rendezvous servers. Parsec Parsec\u2019s remote access technology powers experiences people love. Collaborating with a colleague should be as easy as going one more round in your favorite game. We\u2019re building tools that keep you connected."},{"location":"apps/#tools","title":"Tools","text":"Application Description PowerToys PowerToys is a collection of free, open-source utilities for Windows that enhance productivity and provide advanced features for power users. Developed by Microsoft, these tools allow users to customize and improve their Windows experience with a variety of enhancements. PowerToys provides a suite of utilities designed to make common tasks easier and improve system functionality. EarTrumpet Is a powerful volume control app for Windows"},{"location":"apps/#notes","title":"Notes","text":"Application Description Obsidian Obsidian is a powerful and versatile note-taking and knowledge management application designed for users who value flexibility, customization, and the ability to create a connected \"second brain.\" It's popular among students, researchers, writers, and professionals who need an efficient system for organizing their thoughts, notes, and projects. Notion Notion is an all-in-one productivity and note-taking platform that combines features like document creation, task management, database organization, and team collaboration. It\u2019s designed to be highly customizable, making it suitable for individuals, teams, and businesses alike."},{"location":"apps/#virtual-machine","title":"Virtual machine","text":"Application Description VirtualBox Oracle VM VirtualBox is a free, open-source virtualization software that allows users to run multiple operating systems on a single physical machine. VirtualBox supports a wide range of guest operating systems, including various versions of Windows, Linux, macOS (with restrictions), and others. It is used for testing, development, learning, and running software in isolated environments, all while keeping your host system unchanged. VMware Workstation VMware Workstation is a powerful desktop virtualization software developed by VMware, widely used for running multiple operating systems on a single physical machine. It provides robust features for developers, IT professionals, and businesses who need to test, develop, and run virtual machines in a stable and secure environment. VMware Workstation is known for its advanced capabilities and superior performance, making it a top choice for both personal and enterprise use."},{"location":"apps/#audio","title":"Audio","text":"Application Description Audacity Audacity is a free, open-source, and cross-platform audio editing software widely used for recording, editing, and processing audio files. Available on Windows, macOS, and Linux, Audacity is popular among podcasters, musicians, sound engineers, and anyone who needs a versatile tool for working with audio. It provides a comprehensive set of features for both basic and advanced audio editing, making it suitable for beginners and professionals alike."},{"location":"apps/#network","title":"Network","text":"Application Description 3x-ui Xray panel supporting multi-protocol multi-user expire day &amp; traffic &amp; IP limit (Vmess &amp; Vless &amp; Trojan &amp; ShadowSocks &amp; Wireguard). Nekoray Qt based cross-platform GUI proxy configuration manager (backend: sing-box). Marzban Unified GUI Censorship Resistant Solution Powered by Xray."},{"location":"arch/","title":"Arch Linux","text":""},{"location":"arch/#preparation-of-installation-image","title":"Preparation of Installation Image","text":"<p>Note</p> <p>We want to emphasize that Linux systems can be installed almost anywhere: on a desktop, a laptop, a USB drive, or even a phone (if the distribution supports it). The installation process is roughly the same, but there are differences that need to be understood. For example, when installing Arch Linux as a second system, you'll need to manually configure efibootmgr. Additionally, there are differences in setting up dual boot on a machine with BIOS versus UEFI.</p> <p>That's why guides will repeat certain steps to avoid creating confusion with too many \"If you have BIOS, do this\u2026\" and \"If you have UEFI, do that\u2026\" instructions scattered throughout.</p> <p>What You\u2019ll Need to Begin Installation:</p> <ul> <li>A USB flash drive</li> <li>The system\u2019s ISO file</li> <li>A program to write the ISO image</li> <li>A machine where Arch will be installed</li> </ul> <p>The installation will be done as the primary operating system.</p> <p>Let's create the installer on a USB drive.</p> <p>First, download the system image from the official Arch Linux website using the method that works best for you. We recommend using a Torrent client.</p> <p>There are several programs that can help with this process, such as:</p> <ul> <li>Rufus</li> <li>Balena Etcher</li> <li>UltraISO (Yes, really\u2026)</li> </ul> <p>In our case, we'll use Rufus. After downloading the image, open Rufus.</p> <ul> <li>Device: Select your *USB flash drive.  </li> <li>Boot selection: Choose \"Disk or ISO image\" and specify the path to the Arch Linux ISO file.  </li> <li>Partition scheme: Select MBR.  </li> <li>File system: Choose FAT32.  </li> <li>Cluster size: Leave it as default.  </li> </ul> <p></p> <p>Important</p> <p>All files on the USB drive will be erased! </p> <ul> <li>Click Start. In the pop-up window, select the option that mentions the ISO.</li> </ul> <p>After the process is complete, connect the USB flash drive to the machine where you want to install the system. Enter the BIOS of the machine and disable Secure Boot (you can enable it again after the installation is complete). Now, we can boot from the USB. When the machine boots from the USB, you'll see a menu. Select the first option Arch Linux install medium, and wait for the system to load.</p> <p></p>"},{"location":"arch/#installation","title":"Installation","text":""},{"location":"arch/#network-settings","title":"Network settings","text":"<p>Setting Up a Wireless Network</p> <p>If you are connected via a wired connection, simply check if it works using the following command:</p> <pre><code>ping archlinux.org\n</code></pre> <p>If you get a response, everything is fine. If not, it means the required service didn't start. Try restarting the machine or re-creating the installation image. We will use the iwctl utility.</p> <p>Execute the command:</p> <pre><code>iwctl\n</code></pre> <p></p> <p>Then enter the following commands:</p> <ol> <li>List available wireless devices:</li> </ol> <pre><code>device list\n</code></pre> <p>Identify the name of your wireless device (e.g., wlan0).</p> <ol> <li>Scan for available networks:</li> </ol> <pre><code>station wlan0 scan\n</code></pre> <ol> <li>View the list of available networks:</li> </ol> <pre><code>station wlan0 get-networks\n</code></pre> <ol> <li>Connect to a Wi-Fi network:</li> </ol> <pre><code>station wlan0 connect {network}\n</code></pre> <p>After this command, you will need to enter the password if the network is secured.</p> <ol> <li>Check the connection status:</li> </ol> <pre><code>station wlan0 show\n</code></pre> <p>Ensure the network is connected.</p> <pre><code>ping archlinux.org\n</code></pre>"},{"location":"arch/#disk-partitioning","title":"Disk Partitioning","text":"<p>There are two utilities for disk partitioning:</p> <ul> <li>fdisk</li> <li>cfdisk</li> </ul> <p>We gonna use <code>fdisk</code>, which is simpler to use and more user-friendly for inexperienced users.</p> <p>First, let's determine the name of our disk.</p> <p>Important</p> <p>It is recommended to disconnect any unnecessary disks to avoid confusion and the accidental loss of data due to inexperience.</p> <p>Use the following command to determine the name of your disk:</p> <pre><code>fdisk -l\n</code></pre> <p>This will output a list of connected disks. </p> <p>Run the following command to configure your disk:  </p> <pre><code>fdisk /dev/nvme0n1\n</code></pre> <p>We need to create three partitions:</p> Partition Size Type boot 1G Efi-system swap 8G linux swap root Remaining space linux filesystem <p>Press P to list partitions in selected disk, if any exists.</p> <p>Press N to create a new partition. Partition numbers should be left as default. Leave the First sector as default by pressing Enter and allocate <code>+1G</code> for Last sector. We just created <code>boot</code> partition.</p> <p>Do same steps for <code>swap</code> by allocating 4-8G (if you want) and all remaining space for <code>root</code>.</p> <p>Important</p> <p>SWAP is the swap partition; it is recommended to include it if your machine has less than 8 GB of RAM.</p> <p>After creating all partitions, press W to apply the changes.</p>"},{"location":"arch/#archinstall","title":"Archinstall","text":"<p>Okay, we\u2019re done with partitioning the disk. Now, let\u2019s proceed with installing Arch with all the components.</p> <p>Enter and wait:</p> <pre><code>archinstall   \n</code></pre> <p>We will be greeted with the following menu.</p> <p></p> <p>Let's go step by step through the process of installing Arch Linux using the installer:</p> <p>Locale</p> <p>Here, you can add the language to be used in the system.</p> <ul> <li>Select Locale language and search for the desired language. You may choose <code>ru_RU</code> if you need so.</li> </ul> <p>Note</p> <p>To quickly search, you can press ? and type the language you need, such as en or ru.</p> <p>Disk configuration</p> <ul> <li>Select <code>Manual Partitioning</code>.</li> </ul> <ul> <li>Choose your disk, in our case <code>nvme0n1</code>.</li> </ul> <ul> <li>Select 1G partition. Assing mountpoint: <code>/boot</code>. Select mark/unmark to be formatted. Change filesystem to <code>fat32</code>.</li> </ul> <ul> <li>Select partition with all remaining disk space. Assing mountpoint: <code>/</code>. Select mark/unmark to be formatted. Change filesystem to <code>ext4</code>.</li> </ul> <ul> <li>Press <code>Confirm and exit</code>.</li> </ul> <p>Bootloader</p> <ul> <li>Select <code>GRUB</code></li> </ul> <p>Hostname</p> <p>Name is used as the computer\u2019s network name.</p> <ul> <li>Enter the name for your system (you can leave it as archlinux).</li> </ul> <p>Root password</p> <p>Set a password for the root user.</p> <ul> <li>Enter the password and confirm it.</li> </ul> <p>User account</p> <p>Add a new user account.</p> <ul> <li>Enter a username.</li> </ul> <ul> <li>Enter a password for the user.</li> </ul> <p>You will be prompted to confirm the addition of superuser privileges (sudo).</p> <ul> <li>Select <code>Yes</code> to confirm.</li> </ul> <p>Profile</p> <p>Choose a GUI for your Arch installation.</p> <ul> <li>Press <code>Type</code>.</li> </ul> <ul> <li>Select <code>Desktop</code>.</li> </ul> <ul> <li>Choose <code>KDE plasma</code>.</li> </ul> <ul> <li>Choose <code>sddm</code></li> </ul> <p>Choose a desktop environment that suits you. It is recommended to choose KDE Plasma.</p> <p>You will be redirected to the next menu.</p> <p>You may choose the appropriate Graphics driver based on your system configuration, but leave as default (All).</p> <p>Network configuration</p> <ul> <li>Choose <code>Use NetworkManager</code></li> </ul> <p>Additional packages</p> <p>Add additional programs that you might find useful.</p> <p>For now, let\u2019s add:</p> <p><code>nano firefox btop</code></p> <p>Timezone</p> <p>Choose your time zone.</p> <p>Note</p> <p>For quick search, press ? and type your desired time zone.</p> <p>Audio</p> <p>Select <code>pipewire</code>.</p> <p>Installing Arch</p> <p>After the pre-installation setup, select <code>Install</code>.</p> <p>Then select <code>Yes</code> and wait for the installation to complete.</p> <p>Once the installation is complete. After the installation is complete, we are prompted to continue the setup in chroot. Select <code>Yes</code>.</p>"},{"location":"arch/#grub-configuration","title":"GRUB configuration","text":"<p>Now, let's set up grub. </p> <p>As we can see there is not arch in boot manager by running the command:</p> <pre><code>efibootmgr\n</code></pre> <p>Modify the configuration:</p> <pre><code>grub-install --target=x86_64-efi --efi-directory=/boot --recheck\n</code></pre> <p>If successful, <code>Installation finished. No errors reported</code> will appear.</p> <p>Re-check as arch entry had to appear:</p> <pre><code>efibootmgr\n</code></pre> <p>Finally:  <pre><code>reboot\n</code></pre></p>"},{"location":"arch/#dual-boot","title":"Dual-boot","text":"<p>If you need to add Windows boot entry for dual-boot, firstly enter root user:</p> <pre><code>sudo su\n</code></pre> <p>Install OS-prober:</p> <pre><code>pacman -S os-prober\n</code></pre> <p>Edit grub config:</p> <pre><code>nano /etc/default/grub\n</code></pre> <p>Scroll to the bottom and uncomment the following</p> grub<pre><code>#GRUB_SAVEDEFAULT=true\n#GRUB_DISABLE_SUBMENU=y\nGRUB_DISABLE_OS_PROBER=false\n</code></pre> <p>Press Ctrl+X, Y and Enter.</p> <p>Now you need to check the Windows Boot manager entry:</p> <pre><code>os-prober\n</code></pre> <p>Generate grub configuration file:</p> <pre><code>grub-mkcofnig -o /boot/grub/grub.cfg\n</code></pre> <p>Should be good to good, if debug messages say so.</p> <p>The REAL final reboot:</p> <pre><code>reboot\n</code></pre>"},{"location":"arch/#linux-goodies","title":"Linux goodies","text":"Application Description Blue Screen of Life Menu styled like the Windows Blue Screen of Death, but family-friendly Arch Linux Gangster Edition Plymouth theme Windows XP boot screen styled as gangsta. You a real gangsta, bro? macOS Boot Splash Style Apple minimalism at its finest. Trendy and stylish Plymouth Themes A pack of multiple boot animations"},{"location":"askubuntu/","title":"Ubuntu questions and answers","text":""},{"location":"askubuntu/#running-a-script-as-a-service","title":"Running a script as a service","text":"<p>Let's say you have a script which normally you run using <code>./myscript.sh</code> (contains java run command). You want to make it as a service, so it runs automatically after machine restart and etc. </p> <p>You need to write systemd service file.</p> <p>Simplest script looks like this:</p> <pre><code>[Unit]\nDescription=Virtual Distributed Ethernet\n\n[Service]\nExecStart=/usr/bin/YOUR_SCRIPT\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Also you need to execute daemon-reload after creating new service.</p> <pre><code>systemctl daemon-reload\n</code></pre>"},{"location":"askubuntu/#schedule-a-nightly-reboot","title":"Schedule a nightly reboot","text":"<p>Edit crontab:</p> <pre><code>crontab -e\n</code></pre> <p>The first time you might have to choose your preferred editor (like nano). Generate your cron with crontab generator and add restart command right after it:</p> <pre><code>0 4 * * * /sbin/shutdown -r +5\n</code></pre> <p>at the bottom. Explanation:</p> <pre><code>m      h    dom        mon   dow       command\nminute hour dayOfMonth Month dayOfWeek commandToRun\n</code></pre> <p>so it would announce the reboot every day at 4:00am, then reboot 5 minutes later (at 4:05am).</p> <p>Ctrl+X, Y, Enter should get you out of crontab (if using nano)</p> <p>Note</p> <p>you might have to run <code>crontab -e</code> as root, because shutdown needs root. <code>crontab -e</code> opens a file in <code>/tmp</code> instead of the actual crontab so that it can check your new crontab for errors. If there are no errors, then your actual crontab will be updated.</p>"},{"location":"askubuntu/#removing-old-or-unused-docker-images","title":"Removing old or unused docker images","text":"<p>Docker 1.13: PR 26108 and commit 86de7c0 introduce a few new commands to help facilitate visualizing how much space the docker daemon data is taking on disk and allowing for easily cleaning up \"unneeded\" excess.</p> <p>docker system prune will delete all dangling data (containers, networks, and images). You can remove all unused volumes with the <code>--volumes</code> option and remove all unused images (not just dangling) with the <code>-a</code> option.</p> <p>You also have: - docker container prune - docker image prune - docker network prune - docker volume prune</p> <p>For unused images, use <code>docker image prune -a</code> (for removing dangling and ununsed images). Warning: 'unused' means \"images not referenced by any container\": be careful before using <code>-a</code>.</p> <p>As illustrated in A L's answer, <code>docker system prune --all</code> will remove all unused images not just dangling ones... which can be a bit too much.</p>"},{"location":"containers-dns/","title":"DNS for Containers","text":"<p>Warning</p> <p>Little disclaimer. Some information was copied from virtualize.link, because I find information provided by its author useful. Make sure to check the source or star the repo.</p>"},{"location":"containers-dns/#problem","title":"Problem","text":"<p>The common setup is to have a server with many containers, and a network DNS such as pihole or adguardhome.</p> <p>The issue is that all dns queries by the server and all containers are grouped into a single bucket on the network DNS, making it difficult to track malicious DNS queries by a single container.</p>"},{"location":"containers-dns/#solution","title":"Solution","text":"<p>Create an adguardhome container for all the other containers to use as their DNS, and set the host as the upstream DNS for reverse lookups, so that container names will be displayed instead of IPs.</p> <p>These are the general steps with an example below:</p> <ul> <li>Create a bridge network with a static subnet.</li> <li>Create an adguardhome container with a static IP in that subnet.</li> <li>Assign all other containers static IPs in that subnet as well.</li> <li>Set the DNS of all other containers to the static IP of adguardhome.</li> <li>Set all other containers to depend on adguardhome.</li> </ul> <pre><code>networks:\n  internal:\n    driver: bridge\n    ipam:\n      config:\n        - subnet: 172.20.0.0/16\nservices:\n  agh:\n    image: adguard/adguardhome\n    container_name: agh\n    volumes:\n      - /path/to/agh/conf:/opt/adguardhome/conf\n      - /path/to/agh/work:/opt/adguardhome/work\n    networks:\n      internal:\n        ipv4_address: 172.20.20.20\n    ports:\n      - 13080:80\n      - 13000:3000\n  someapp:\n    networks:\n      internal:\n        ipv4_address: 172.20.0.2\n    dns: 172.20.20.20\n    depends_on:\n        - agh\n</code></pre>"},{"location":"containers-dns/#adguardhome-configuration","title":"AdguardHome Configuration","text":"<p>Go through the initial configuration on port 13000 and switch to port 13080 to access the web-ui.</p> <p>Settings &gt; General settings</p> <ul> <li>Block domains using filters and hosts files: Uncheck</li> <li>Enable log: Check</li> <li>Query logs rotation: 90 days</li> <li>Ignored domains: ||your-private-domain.tld^</li> <li>Enable statistics: Check</li> <li>Statistics retention: 90 days</li> <li>Ignored domains: ||your-private-domain.tld^</li> </ul> <p>Settings &gt; DNS settings</p> <ul> <li>Upstream DNS servers: <code>127.0.0.11</code>.</li> <li>Private reverse DNS servers: <code>127.0.0.11:53</code>.</li> <li>Use private reverse DNS resolvers: Check</li> <li>Rate limit: 0</li> </ul>"},{"location":"discord/","title":"Client modifications","text":""},{"location":"discord/#pc","title":"PC","text":"<ul> <li>OpenAsar \u2014 perfomance tweak  </li> <li>Vencord \u2014 better alternative of BetterDiscord w/ OpenAsar (recommended)</li> <li>Vesktop \u2014 Vencord, but w/ perfomance of web Discord  (Linux, not sure about macOS)</li> </ul>"},{"location":"discord/#recommended-plugins","title":"Recommended plugins","text":"<ul> <li>AlwaysTrust</li> <li>BetterFolders</li> <li>BetterSessions</li> <li>ClearURLs</li> <li>ColorSighted</li> <li>CrashHandler</li> <li>DisableCallIdle</li> <li>GameActivityToggle</li> <li>ImageZoom</li> <li>MessageLogger</li> <li>NewGuildSettings</li> <li>NoBlockedMessages</li> <li>NoF1</li> <li>NoReplyMention</li> <li>NoTypingAnimation</li> <li>PinDMs</li> <li>PlatformIndicators</li> <li>RelationshipNotifier</li> <li>RoleColorEverywhere</li> <li>ValidUser</li> </ul>"},{"location":"discord/#online-themes","title":"Online themes","text":"<p>Lucord theme</p> OpenAsarOnline Theming <pre><code>@import url(\"https://lucord.wmeluna.com/theme.css\");\n</code></pre> <pre><code>https://lucord.wmeluna.com/theme.css\n</code></pre> <p>Gruvbox theme</p> OpenAsarOnline Theming <pre><code>@import url(\"https://raw.githubusercontent.com/refact0r/midnight-discord/refs/heads/master/flavors/midnight-vencord.theme.css\");\n</code></pre> <pre><code>https://raw.githubusercontent.com/refact0r/midnight-discord/refs/heads/master/flavors/midnight-vencord.theme.css\n</code></pre> <p>Vencord (?)</p> OpenAsarOnline Theming <pre><code>@import url(\"https://raw.githubusercontent.com/Synqat/vencord-theme/main/theme.css\");\n</code></pre> <pre><code>https://raw.githubusercontent.com/Synqat/vencord-theme/main/theme.css\n</code></pre> <p>Amoled</p> OpenAsarOnline Theming <pre><code>@import url(\"https://luckfire.github.io/amoled-cord/src/support/betterdiscord/compiled.css\");\n</code></pre> <pre><code>https://luckfire.github.io/amoled-cord/src/support/betterdiscord/compiled.css\n</code></pre> <p>rosebox</p> OpenAsarOnline Theming <pre><code>@import url(\"https://kraxen72.github.io/rosebox/discord/dist/main.css);\n</code></pre> <pre><code>https://kraxen72.github.io/rosebox/discord/dist/main.css\n</code></pre>"},{"location":"discord/#ios","title":"iOS","text":"<ul> <li>BunnyTweak \u2014 Get prebuilt rootful and rootless <code>.deb</code> files or the prepatched <code>.ipa</code></li> </ul>"},{"location":"discord/#android","title":"Android","text":"<ul> <li>BunnyXposed \u2014 Root with Xposed</li> <li>BunnyManager \u2014 Non-root</li> </ul>"},{"location":"discord/#plugins--themes","title":"Plugins &amp; Themes","text":"<p>Vendetta Discord server.  </p> <p>Warning</p> <p>As of 06/02/24, Vendetta has been discontinued.  </p> <p>bunny.nexpid.xyz vd-plugins.github.io </p>"},{"location":"firefox/","title":"Betterfox - Firefox user.js for speed, privacy, and security. Your favorite browser, but better.","text":"<p>31% faster than regular Firefox </p>"},{"location":"firefox/#required-reading","title":"Required reading","text":"<p>Note</p> <p>Create a backup profile, if you feel unsure about the changes.</p> <p>If you don't have it already: Get Firefox</p>"},{"location":"firefox/#installation","title":"Installation","text":"<ol> <li>Download the user.js file here (Right click &gt; <code>Save Link As\u2026</code>).</li> <li>Review Common Overrides and make any necessary changes.<ul> <li>See also Optional Hardening for other recommendations.</li> <li>Do not change Recommended Overrides as there is no need to do so, create an Issue if I'm wrong.</li> </ul> </li> <li>Open Firefox. In the URL bar, type <code>about:profiles</code> and press <code>Enter</code>.</li> <li>For the profile you want to use (or use default), click <code>Open Folder</code> in the Root Directory section.</li> <li>Close Firefox.</li> <li>Move the <code>user.js</code> file into the folder.</li> <li>Open Firefox and make changes in settings if you need.  </li> </ol> <p>After restarting Firefox: </p> <ol> <li>Get an ad blocker like uBlock Origin with our recommended filters.</li> <li>Go to <code>C:\\Program Files\\Mozilla Firefox\\distribution</code> and put policies.json there.</li> <li>Restart again and then check <code>about:policies</code>, if you see tweaks there, then you're good to go.<ul> <li>You probably don't have distribution, so create it.</li> <li>If your Firefox folder isn't in that path, so find it yourself and do the same steps.</li> </ul> </li> </ol>"},{"location":"firefox/#overrides","title":"Overrides","text":"<p>Follow the original Betterfox wiki</p>"},{"location":"firefox/#passwords-override","title":"Passwords override","text":"<p>Danger</p> <p>For those who store passwords in the browser (in a Mozilla account) - remove the <code>//</code> at the beginning of line 238; otherwise, the browser won't suggest entering the saved password.</p> <ol> <li>Open <code>user.js</code> with any IDE</li> <li>Move to the end of file and edit line 238 as said above.</li> </ol> <p>In result, code should look like this: user.js<pre><code>user_pref(\"signon.rememberSignons\", true);\nuser_pref(\"ui.key.menuAccessKeyFocuses\", false);\nuser_pref(\"browser.tabs.warnOnClose\", true);\nuser_pref(\"browser.tabs.hoverPreview.enabled\", false);\n\n/****************************************************************************\n * END: MY OVERRIDES                                                        *\n****************************************************************************/\n</code></pre></p>"},{"location":"firefox/#modifications-for-other-platforms","title":"Modifications for other platforms","text":"<ul> <li>Fennec (F-droid)</li> </ul>"},{"location":"geoblock/","title":"Geoblock","text":"<p>Warning</p> <p>Little disclaimer. Some information was copied from virtualize.link, because I find information provided by its author useful. Make sure to check the source or star the repo.</p>"},{"location":"geoblock/#vps","title":"VPS","text":"<p>I've been dealing with constant attacks on a mail server on a VPS coming from 2 specific countries, the only solution that worked was completely blocking these countries.</p> <p>There are 2 popular geoblock providers, Maxmind and DP-IP, we can utilize them using a python library called geoipsets.</p>"},{"location":"geoblock/#installation","title":"Installation","text":"<p>Install the following packages:</p> <pre><code>sudo apt install python3 python3.12 python3-pip python3-venv ipset\n</code></pre> <p>Create a python virtual environment:</p> <pre><code>python3 -m venv .venv\n</code></pre> <p>Verify that it works:</p> <pre><code>source .venv/bin/activate\n</code></pre>"},{"location":"geoblock/#geoblock-config","title":"Geoblock Config","text":"<p>Create a geoblock config according to the geoipsets documentation.</p> <p>For example <code>/home/user/geoipsets.conf</code>:</p> <pre><code>[general]\nprovider=dbip\nfirewall=iptables\naddress-family=ipv4,ipv6\n\n[countries]\nRU\nCN\n</code></pre> <p>Verify that it works:</p> <pre><code>source .venv/bin/activate\ngeoipsets -o /home/user -c /home/user/geoipsets.conf\n</code></pre>"},{"location":"geoblock/#geoblock-script","title":"Geoblock Script","text":"<p>Create a script to refresh the geoblock ipsets and recreate the iptables rules.</p> <p>For example <code>/home/user/geoblock.sh</code>:</p> <pre><code>#!/bin/bash\n\noutput_path=\"/home/user\"\nvenv_path=\"/home/user/.venv/bin/activate\"\nconfig_path=\"/home/user/geoipsets.conf\"\nlog=\"/home/user/geoblock.log\"\n\necho \"Updating Blocklist $(date)\" &gt;&gt; $log\nsource $venv_path\ngeoipsets -o $output_path -c $config_path &gt;&gt; $log\n\nfor i in $(find \"${output_path}/geoipsets\" -name \"*.ipv*\");\ndo\n    name=$(basename $i)\n    echo $name &gt;&gt; $log\n    /usr/sbin/ipset flush $name &gt;&gt; $log\n    /usr/sbin/ipset restore --exist --file $i &gt;&gt; $log\n    command=$(if [[ $name == *ipv4 ]]; then echo \"/usr/sbin/iptables\"; else echo \"/usr/sbin/ip6tables\"; fi)\n    $command -D FORWARD -m set --match-set $name src -j DROP &amp;&gt;/dev/null\n    $command -D INPUT -m set --match-set $name src -j DROP &amp;&gt;/dev/null\n    $command -D DOCKER-USER -m set --match-set $name src -j DROP &amp;&gt;/dev/null\n    $command -I DOCKER-USER 1 -m set --match-set $name src -j DROP &gt;&gt; $log\n    $command -I INPUT 1 -m set --match-set $name src -j DROP &gt;&gt; $log\n    $command -I FORWARD 1 -m set --match-set $name src -j DROP &gt;&gt; $log\ndone\n</code></pre> <p>Verify that it works and the ipsets have been filled:</p> <pre><code>chmod +x /home/user/geoblock.sh\nsudo /home/user/geoblock.sh\nsudo ipset list RU.ipv4\n</code></pre>"},{"location":"geoblock/#cron-scheduling","title":"Cron Scheduling","text":""},{"location":"geoblock/#warning---make-sure-youre-not-accidentally-blocking-your-own-access-to-the-vps-before-proceeding","title":"Warning - make sure you're not accidentally blocking your own access to the VPS before proceeding.","text":"<p>Run the geoblock script on reboot and weekly.</p> <p>For example, add the following to <code>sudo crontab -e</code>:</p> <pre><code>20 0 * * 2 /home/user/geoblock.sh\n@reboot sleep 120 &amp;&amp; /home/user/geoblock.sh\n</code></pre> <p>Verify that it runs on reboot and weekly. There's a 2 minute delay before it applies after reboots, to give you enough time to fix a lockout.</p>"},{"location":"geoblock/#opnsense","title":"OPNSense","text":""},{"location":"geoblock/#alias","title":"Alias","text":"<p>Navigate to Firewall &gt; Aliases &gt; GeoIP settings and add a link to a geoblock database with your license key:</p> <pre><code>https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&amp;license_key=your-license-key&amp;suffix=zip\n</code></pre> <p>Navigate to Firewall &gt; Aliases and create aliases with the countries you want to block or whitelist a specific country:</p> <pre><code>Name: Geoblock\nType: GeoIP (IPv4, IPv6)\nContent: Select all the countries you want to block\n</code></pre> <pre><code>Name: UK\nType: GeoIP (IPv4, IPv6)\nContent: Select UK\n</code></pre>"},{"location":"geoblock/#firewall","title":"Firewall","text":"<p>Navigate to Firewall &gt; Rules &gt; WAN and create firewall rules:</p> <pre><code>Action: Block\nInterface: WAN\nDirection: in\nTCP/IP Version: IPv4+IPv6\nProtocol: any\nSource: Geoblock\nDestination: any\nDescription: Blocks specific countries\n</code></pre> <pre><code>Action: Pass\nInterface: WAN\nDirection: in\nTCP/IP Version: IPv4+IPv6\nProtocol: TCP\nSource: UK\nDestination: WAN address\nDestination port range: 443\nDescription: Whitelist UK on port 443\n</code></pre>"},{"location":"geoblock/#cron","title":"Cron","text":"<p>Create a cron job to automatically update the blocklists every day.</p> <p>Navigate to System &gt; Settings &gt; Cron and add the following job:</p> <pre><code>Eabled: checked\nMinutes: 0\nHours: 0\nDay of the month: *\nMonths: *\nDays of the week: *\nCommand: Update and reload firewall aliases\n</code></pre>"},{"location":"gettingstarted/","title":"Getting Started","text":""},{"location":"gettingstarted/#about","title":"About","text":"<p>Welcome to docs, which created by my personal experience in EVERYTHING me and my mates and team face nowadays and faced during our lifes.</p>"},{"location":"gettingstarted/#language-barrier","title":"Language barrier","text":"<p>To be honest, I don't care. It would be too easy if all the data was presented to you like a dish in a restaurant. I want the reader to understand the problem he is dealing with and \"dive\" in the topic.</p>"},{"location":"iphone/","title":"iPhone usage notes","text":""},{"location":"iphone/#periodic-phone-wipe-notes","title":"Periodic Phone Wipe Notes","text":"<p>It is a good manner to wipe your device every N-period. I would recommend wiping iPhone with every major release (iOS 17 -&gt; 18). Why? Because it is iOS.</p> <p>This page was written because I merged from iPhone 12 (64GB) to Nothing Phone (2).</p>"},{"location":"iphone/#backup","title":"Backup","text":"<ul> <li>Manually uploading all files to Nextcloud if iCloud storage is full</li> <li>Reset your phone and set it up fresh, not by using a backup. However if it only contains your personal files, then you may. But I'd prefer doing everything manually.</li> <li>You can't downgrade if your iOS is NOT jail-broke</li> </ul>"},{"location":"iphone/#configuration","title":"Configuration","text":"<ul> <li>Settings<ul> <li>Wi-FI<ul> <li>Ask to Join Networks: Notify</li> <li>Auto-Join Hotspot: Never</li> <li>Add Adguard DNS to your main Network if you need so</li> </ul> </li> <li>Proxy (Can't use the 3 letter word, so let's say it is Proxy)<ul> <li>Self-hosted according to 3x-ui guide</li> <li>Always-on (manual turn on with every reboot)</li> </ul> </li> <li>General<ul> <li>AirDrop: Contancts only</li> <li>Autofill &amp; Passwords: Self-hosted Bitwarden</li> <li>Background App Refresh: Off</li> <li>Keyboard<ul> <li>Auto-Capitalisation: Off</li> <li>Auto-Correction: Off</li> </ul> </li> <li>Language &amp; Region: English &amp; France (since they can't slowdown devices in France)</li> </ul> </li> <li>Accessibility<ul> <li>Dispaly &amp; Text Size<ul> <li>Bold text: On</li> <li>On/Off Labels: On</li> </ul> </li> </ul> </li> <li>Search<ul> <li>Show Recent: Off</li> <li>Show Related: Off</li> <li>Help Apple: Off</li> </ul> </li> <li>Siri a.k.a worst assistant<ul> <li>Suggest Apps: Off</li> <li>Allow Notifications: Off</li> <li>Show Listening Suggestions: Off</li> </ul> </li> <li>StandBy<ul> <li>StandBy: Off (useless)</li> </ul> </li> <li>Screen Time<ul> <li>Communication Safety: Off</li> <li>Content &amp; Privacy Restrictions: Off</li> </ul> </li> <li>Privacy &amp; Security<ul> <li>Location Services -&gt; System Services<ul> <li>HomeKit: Off</li> <li>iPhone Analytics: Off</li> <li>Routing &amp; Traffic: Off</li> <li>Improve Maps: Off</li> </ul> </li> <li>Tracking: Off</li> <li>Journaling Suggestions: Off</li> <li>Sensitive Content Warning: Off</li> <li>Analytics &amp; Improvements: All off</li> <li>Apple Advertising: Off</li> <li>App Privacy Report: Off</li> <li>Stolen Device Protection: On</li> </ul> </li> <li>App Store<ul> <li>App Downloads: Off</li> <li>App Updates: Off</li> <li>In-App Content: Off</li> <li>Automatic Downloads: Off</li> <li>App Downloads: Ask if Over 200 MB</li> <li>Video Autoplay: Wi-Fi Only</li> <li>In-App Ratings &amp; Reviews: Off</li> <li>Offload Unused Apps: Off</li> </ul> </li> <li>Photos<ul> <li>Download and Keep Originals: On</li> </ul> </li> </ul> </li> </ul>"},{"location":"jfscan/","title":"Jfscan","text":"<p>https://github.com/nullt3r/jfscan</p>"},{"location":"legal/","title":"Legal Notice","text":"<p>Danger</p> <p>This page is deprecated and was created for testing only. Our organization doesn't have any registrations yet, so this document is like a funny-draft only.</p> <p>Effective Date: [date]</p> <p>This Legal Notice governs the use of the services and intellectual property provided by Amdcloud (Adaptive Multi-Device Cloud). By accessing or using our services, you agree to comply with the terms outlined below.  </p>"},{"location":"legal/#1-organization-details","title":"1. Organization Details","text":"<ul> <li>Organization Name: Adaptive Multi-Device Cloud  </li> <li>Contact Email: support@amdcloud.kz </li> <li>Website: amdcloud.kz</li> </ul>"},{"location":"legal/#2-general-information","title":"2. General Information","text":"<p>Our services include but are not limited to Nextcloud, Vaultwarden (Bitwarden), and Zipline. These services operate under the GPL-3.0 license, ensuring users the freedom to study, modify, and redistribute the software within the constraints of the license.  </p> <p>All users must adhere to the following terms when interacting with our services or intellectual property.  </p>"},{"location":"legal/#3-terms-of-use","title":"3. Terms of Use","text":""},{"location":"legal/#use-of-services","title":"Use of Services","text":"<ul> <li>Free and Paid Services: We provide both free and paid services without discrimination regarding data handling or security.  </li> <li>Prohibited Actions: Users must not engage in activities that compromise the security or functionality of our hosting servers and services. Violation will result in account termination and data deletion as outlined below.  </li> </ul>"},{"location":"legal/#4-intellectual-property","title":"4. Intellectual Property","text":""},{"location":"legal/#logos-trademarks-and-organization-name","title":"Logos, Trademarks, and Organization Name","text":"<ul> <li>Unauthorized use of our logos, trademarks, or organization name without a signed agreement is strictly prohibited.  </li> <li>Violators will:  <ul> <li>Have their accounts permanently disabled.  </li> <li>Be notified via their linked email address.  </li> <li>Lose access to their files after a notification grace period, after which files will be deleted.  </li> </ul> </li> </ul>"},{"location":"legal/#5-liability-disclaimer","title":"5. Liability Disclaimer","text":""},{"location":"legal/#data-security","title":"Data Security","text":"<p>While we employ robust measures, including encryption, 2FA, and access controls, users are responsible for securing their accounts. Weak passwords or failure to enable 2FA may compromise account security.  </p>"},{"location":"legal/#service-availability","title":"Service Availability","text":"<p>We strive to maintain consistent uptime and service quality. However, we are not liable for service interruptions caused by technical issues, maintenance, or unforeseen events.  </p>"},{"location":"legal/#user-responsibility","title":"User Responsibility","text":"<p>Users are solely responsible for the legality of the content they upload, share, or distribute using our services. We do not monitor user activity beyond the necessary collection of metadata for service functionality.  </p>"},{"location":"legal/#6-compliance-with-gpl-30","title":"6. Compliance with GPL-3.0","text":"<p>Our services and software adhere to the terms of the GPL-3.0 license, granting users rights to: - Use the software freely. - Access the source code. - Modify and redistribute the software, provided such modifications also comply with the GPL-3.0 terms.  </p> <p>Misuse of these rights to breach this Legal Notice or cause harm to our services is strictly prohibited.  </p>"},{"location":"legal/#7-legal-jurisdiction","title":"7. Legal Jurisdiction","text":"<p>This Legal Notice is governed by the laws of [Insert Jurisdiction]. Any disputes arising from the use of our services will be resolved within the courts of this jurisdiction.  </p>"},{"location":"legal/#8-updates-to-this-legal-notice","title":"8. Updates to this Legal Notice","text":"<p>We reserve the right to modify this Legal Notice to reflect changes in our services, intellectual property policy, or applicable laws. Updates will be communicated through service notifications or email.  </p> <p>Contact Information For inquiries related to this Legal Notice, please reach out to us at:  </p> <ul> <li>Email: support@amdcloud.kz</li> </ul>"},{"location":"marzban/","title":"Marzban","text":"<p>Danger</p> <p>Don't pay for the \"private\" guides, no one will tell you anything more, because there is no more functionality.</p>"},{"location":"nekoray/","title":"Nekoray","text":"<p>??? note \"Sources\"     A\u00e9za</p> <p>Before we begin, note that there are two installation options depending on your needs:</p> <ul> <li>If you chose Reality method for your 3x-ui installation - you may use the original Nekoray.</li> <li>If you need to proxy specific applications, we recommend Mahdi-zarei's nekoray fork.</li> </ul> <p>This is because no matter what version of an original Nekoray, the \"Whitelist Mode\" in Tun Mode settings does not work for everyone in our team. As a result, you won\u2019t be able to proxy only specific applications.</p>"},{"location":"nekoray/#install","title":"Install","text":"<p>Installing and Configuring Nekoray</p> <p>Here is a list of all available download links for Nekoray, categorized by operating system:</p> <ul> <li>Nekoray for Windows (64-bit)</li> </ul> Mahdi-zarei's fork3.263.25 <p>Download Mahdi-zarei's fork</p> <p>Download 3.26</p> <p>Download 3.25</p> <ul> <li>Nekoray for linux (64-bit, archive)</li> </ul> Mahdi-zarei's fork3.263.25 <p>Download Mahdi-zarei's fork</p> <p>Download 3.26</p> <p>Download 3.25</p> <ul> <li>Nekoray for Linux (AppImage)</li> </ul> Mahdi-zarei's fork3.263.25 <p>Download Mahdi-zarei's fork</p> <p>Download 3.26</p> <p>Download 3.25 </p> <ul> <li>Nekoray for Debian/Ubuntu (64-bit, package .deb)</li> </ul> Mahdi-zarei's fork3.263.25 <p>Download Mahdi-zarei's fork</p> <p>Download 3.26</p> <p>Download 3.25 </p> <ul> <li>Nekoray for Android</li> </ul> arm64-v8aarmeabi-v7a <p>Download Latest for arm64-v8a</p> <p>Download Latest for armeabi-v7a</p>"},{"location":"nekoray/#installing-nekoray-on-windows","title":"Installing Nekoray on Windows","text":"<p>Next, we will look at the installation process for Nekoray on Windows. Some steps may vary depending on the system, but the overall process remains the same.</p> <p>Step 1: Download <code>Nekoray</code></p> <p>Step 2: fter the download is complete, follow these steps:</p> <ul> <li>Locate the downloaded file: <code>nekoray-3.26-2023-12-09-windows64.zip</code>.  </li> </ul> <ul> <li>Right-click on the file and select \"Extract All\u2026\", or use an archiving tool like WinRAR or 7-Zip to extract the contents to a convenient location on your computer.  </li> </ul> <p>Step 3: Launching the Program</p> <ol> <li>Open the folder with the extracted files.</li> <li>Locate the file <code>nekoray.exe</code>.</li> <li>Double-click it to launch the program.</li> </ol> <p>The program works out of the box. No installation is required.</p>"},{"location":"nekoray/#initial-setup-of-original-nekoray","title":"Initial Setup of original Nekoray","text":"<ol> <li>Core Selection:</li> </ol> <p>When you launch the program for the first time, make sure to select the sing-box core. </p> <p></p> <p>This is necessary for proper functionality. If you were not given this choice or selected something other than sing-box, you can check or change it in the settings:</p> <ul> <li>Click on Settings</li> <li>General Settings</li> <li>Navigate to the Core tab</li> <li>Select <code>sing-box</code>.</li> </ul> <ol> <li> <p>Adding a Profile</p> </li> <li> <p>Copy the profile link for the VPN connection.</p> </li> <li>Paste it into Nekoray using the shortcut Ctrl + V or through the menu: - Click on the Server button. - Select the option Add Profile from Clipboard.</li> </ol> <p></p> <p>Now we have three scenarios:</p> <ol> <li> <p>If you only need to proxy the browser. This works for any version.</p> </li> <li> <p>If you need everything to be proxied, select \"TUN Mode\". We\u2019ll go into more detail about configuring this below. This is only relevant for version 3.26 or older.</p> </li> </ol>"},{"location":"nekoray/#scenario-1","title":"Scenario 1","text":"<p>System Proxy mode</p> <ul> <li>Right-click on the profile.</li> <li>Select Start.</li> <li>At the top, you will see System Proxy Mode \u2014 turn it on.</li> </ul> <p></p> <p>Done.</p>"},{"location":"nekoray/#scenario-2","title":"Scenario 2","text":"<p>For 3.26 version</p> <ol> <li>Go to the Settings tab.</li> <li>Open TUN Mode Settings.</li> <li>Configure the following: - Stack: Mixed - MTU: 1500 (you can leave it at 9000, but we recommend 1500). - Mode TUN: Turn off. although in original versions of nekoray, whitelist/blocklist doesn\u2019t work at all </li> </ol> <p></p> <p>Next:</p> <ul> <li>Right-click on the profile.</li> <li>Select Start.</li> <li>At the top, you will see TUN Mode \u2014 turn it on. You will be prompted to restart the program as an administrator. Confirm.</li> </ul> <p></p>"},{"location":"nekoray/#initial-setup-of-nekoray-fork","title":"Initial Setup of Nekoray fork","text":""},{"location":"nextcloud/","title":"Optimizing Nextcloud","text":"<p>Warning</p> <p>Little disclaimer. Some information was copied from virtualize.link, because I find information provided by its author useful. Make sure to check the source or star the repo.</p> <p>The following is a collection of ways to optimize Nextcloud's performance and responsiveness.</p>"},{"location":"nextcloud/#optimization-steps","title":"Optimization Steps","text":"<ul> <li>Use the LSIO image, not the official</li> <li>Use the latest tag which includes php8</li> <li>Enable redis</li> <li>Use mariadb (alpine) or postgres</li> <li>Use nextcloud v22 or higher</li> <li>Use imaginary to speed up thumbnail creation</li> <li>Add the following to <code>/config/php/php-local.ini</code></li> </ul> <pre><code>memory_limit = -1\nopcache.enable = 1\nopcache.enable_cli = 1\nopcache.interned_strings_buffer = 16\nopcache.max_accelerated_files = 130987\nopcache.memory_consumption = 256\nopcache.save_comments = 1\nopcache.revalidate_freq = 1\n</code></pre> <ul> <li>Add the following to <code>/config/php/www2.conf</code> <pre><code>pm = dynamic\npm.max_children = 120\npm.start_servers = 12\npm.min_spare_servers = 6\npm.max_spare_servers = 18\n</code></pre></li> <li>Disable Dark Reader extension on it, if you use it</li> <li>For Nextcloud to identify filesystem changes, add the following to the config: <pre><code>  'filesystem_check_changes' =&gt; 1,\n</code></pre></li> <li>Move <code>/config</code> to a fast disk such as nvme and mount it from there</li> <li>After the initial run move <code>/data/appdata_INSTANCEID</code> to a fast disk such as nvme and mount it from there, add the following under <code>volumes:</code>: (the ID in the directory names will be different) <pre><code>      - /path/to/appdata/appdata_ocytnd8b2l1b:/data/appdata_ocytnd8b2l1b\n</code></pre></li> </ul>"},{"location":"nextcloud/#example-nextcloud-config","title":"Example Nextcloud Config","text":"<p>Located in <code>/config/www/nextcloud/config/config.php</code> <pre><code>  'dbname' =&gt; 'nextcloud',\n  'dbhost' =&gt; 'mariadb',\n  'dbport' =&gt; '',\n  'dbtableprefix' =&gt; 'oc_',\n  'mysql.utf8mb4' =&gt; true,\n  'dbuser' =&gt; 'nextcloud_user',\n  'dbpassword' =&gt; 'DATABASE_PASSWORD',\n  'trusted_proxies' =&gt; ['172.16.0.0/12'],\n  'filesystem_check_changes' =&gt; 1,\n  'memcache.local' =&gt; '\\\\OC\\\\Memcache\\\\APCu',\n  'memcache.distributed' =&gt; '\\\\OC\\\\Memcache\\\\Redis',\n  'memcache.locking' =&gt; '\\\\OC\\\\Memcache\\\\Redis',\n  'enable_previews' =&gt; true,\n  'enabledPreviewProviders' =&gt; \n  array (\n    0 =&gt; 'OC\\\\Preview\\\\Imaginary',\n    1 =&gt; 'OC\\\\Preview\\\\Movie',\n    2 =&gt; 'OC\\\\Preview\\\\MP4',\n  ),\n  'preview_imaginary_url' =&gt; 'http://imaginary:9000',\n  'redis' =&gt; \n  array (\n    'host' =&gt; 'redis',\n    'port' =&gt; 6379,\n  ),\n</code></pre></p>"},{"location":"nextcloud/#example-compose","title":"Example Compose","text":"<pre><code>  nextcloud:\n    image: ghcr.io/linuxserver/nextcloud:latest\n    container_name: nextcloud\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Europe/London\n    volumes:\n      - /path/to/appdata:/config\n      - /path/to/data:/data\n      - /path/to/appdata/appdata_ocytnd8b2l1b:/data/appdata_ocytnd8b2l1b\n    restart: unless-stopped\n    depends_on:\n      - mariadb\n      - redis\n      - imaginary\n  imaginary:\n    image: nextcloud/aio-imaginary:latest\n    container_name: imaginary\n    restart: unless-stopped\n  redis:\n    image: redis:alpine\n    container_name: redis\n    restart: unless-stopped\n  mariadb:\n    image: ghcr.io/linuxserver/mariadb\n    container_name: mariadb\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Europe/London\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud_user\n      - MYSQL_PASSWORD=DATABASE_PASSWORD\n      - MYSQL_ROOT_PASSWORD=ROOT_ACCESS_PASSWORD\n    volumes:\n      - /path/to/appdata:/config\n    restart: unless-stopped\n</code></pre>"},{"location":"nothing/","title":"Nothing.tech","text":""},{"location":"nothing/#configuration","title":"Configuration","text":""},{"location":"nothing/#apps","title":"Apps","text":""},{"location":"nothing/#battery-drain","title":"Battery Drain","text":"<p>If you have recently purchased the Nothing Phone Series, it might be running a very old firmware version, which is the reason for weird performance. Increased battery consumption may occur until you update to the latest version.</p> <p>We also recommend doing the following:</p> <ol> <li>Clear the cache and storage of the Nothing Launcher.  </li> <li>Clear the cache and delete the data of Google Play Services. if os is fresh installed </li> <li>Clear the cache of Google Play Services for AR.  </li> <li>Set the battery usage mode for Nothing Launcher to \"RESTRICTED.\"  </li> <li>Disable notification access for Nothing Launcher.  </li> <li>Restart and fully charge your phone.  </li> </ol>"},{"location":"nothing/#chargers","title":"Chargers","text":"<p>The phones support Quick Charge 4.0 and Power Delivery 3.0 charging protocols.</p> <ul> <li>Nothing Phone 1 - 33 Watts  </li> <li>Nothing Phone 2, 2a - 45 Watts  </li> </ul> <p>All phones support Qi standard wireless charging with up to 15 Watts. Recommended GaN charger brands:</p> <ul> <li>Baseus</li> <li>Anker</li> <li>Ugreen</li> </ul> <p>The author has been using the Baseus GaN5 Pro 2C+U charger for a year.</p> <p>There are no exact recommendations\u2014choose a charger based on your needs, such as the number of ports, size, power, etc. Simply research and pick the one that suits your functionality requirements best.</p>"},{"location":"nothing/#disabling-call-recording-notification-during-a-call","title":"Disabling Call Recording Notification During a Call","text":"<p>To disable the voice notification that call recording has started, follow these steps:</p> <ol> <li>Install <code>TTSLexx</code> from Google Play.</li> <li>In your phone settings, search for <code>Text-to-Speech</code> and open it.</li> <li>In the Text-to-Speech settings, select <code>Default Text-to-Speech Engine</code> and choose <code>TTSLexx</code>.</li> <li>Go to Apps in the settings, find the Phone app, and open it. Tap Clear Cache and Clear Storage. Your contacts will remain safe (this is confirmed for the Google Phone app).</li> </ol> <p>Note</p> <p>The notification about call recording will appear during the first call, but it will not occur in subsequent calls.</p>"},{"location":"policy/","title":"Privacy policy","text":"<p>Danger</p> <p>This page is deprecated and was created for testing only. Our organization doesn't have any registrations yet, so this document is like a funny-draft only.</p> <p>Effective Date: [date]</p> <p>Introduction Amdcloud (Adaptive Multi-Device Cloud) respects your privacy and is committed to protecting your personal information. This privacy policy explains how we collect, use, and protect the data you provide when using our services, including Nextcloud, Vaultwarden (Bitwarden), and Zipline.</p> <p>By using our services, you agree to the practices described in this policy, as aligned with the GPL-3.0 license principles.  </p>"},{"location":"policy/#1-information-we-collect","title":"1. Information We Collect","text":"<p>We collect the following types of information:  </p> <ul> <li>Personal Information: Data you provide in your user profile, such as name, email, and other optional details. This information is encrypted and only visible to other users if you explicitly allow it.  </li> <li>Usage Data: Limited information, such as IP addresses, collected to identify prohibited actions against our hosting servers or services.  </li> <li>Personal Files: Files uploaded to our services are encrypted and accessible only via shared links.  </li> </ul>"},{"location":"policy/#2-how-we-use-your-information","title":"2. How We Use Your Information","text":"<p>We use the collected data to:  </p> <ul> <li>Provide, maintain, and improve our services.  </li> <li>Investigate suspected violations of our terms or prohibited activities.  </li> <li>Communicate with you regarding account-related issues.  </li> </ul> <p>We do not sell, share, or disclose your information to third parties.  </p>"},{"location":"policy/#3-security-measures","title":"3. Security Measures","text":"<p>We implement advanced security measures to protect your data:  </p> <ul> <li>Encryption: All personal data and files are stored encrypted.  </li> <li>Two-Factor Authentication (2FA): Offered for added security.  </li> <li>Web Application Firewall (WAF): Monitors and protects against threats.  </li> <li>Access Controls: Ensures only authorized personnel handle sensitive data.  </li> </ul> <p>While we strive to ensure security, users are responsible for setting strong passwords and enabling 2FA to protect their accounts.  </p>"},{"location":"policy/#4-service-specific-privacy-details","title":"4. Service-Specific Privacy Details","text":""},{"location":"policy/#nextcloud","title":"Nextcloud","text":"<ul> <li>Hosted on our servers.  </li> <li>Personal files are encrypted and can only be accessed through shared links.  </li> </ul>"},{"location":"policy/#vaultwarden-bitwarden","title":"Vaultwarden (Bitwarden)","text":"<ul> <li>User credentials and sensitive data are stored encrypted.  </li> <li>Security depends on your chosen practices, such as strong passwords and enabling 2FA.  </li> </ul>"},{"location":"policy/#zipline","title":"Zipline","text":"<ul> <li>No tracking or logging of user activities.  </li> <li>File names are stored solely for generating URLs.  </li> </ul>"},{"location":"policy/#5-intellectual-property","title":"5. Intellectual Property","text":"<p>Unauthorized use of our logos, organization name, or trademarks is strictly prohibited. Violators will:  </p> <ul> <li>Have their accounts permanently disabled.  </li> <li>Be notified via their linked email address.  </li> <li>Lose access to their files after a notification grace period, after which files will be deleted.  </li> </ul>"},{"location":"policy/#6-your-rights","title":"6. Your Rights","text":"<p>As a user of our GPL-3.0-compliant services, you retain the rights granted under this license, including the freedom to study, modify, and redistribute the software. However, these rights do not extend to violating our terms, misusing our intellectual property, or engaging in prohibited actions against our systems.  </p>"},{"location":"policy/#7-changes-to-this-privacy-policy","title":"7. Changes to This Privacy Policy","text":"<p>We may update this privacy policy to reflect changes to our services or applicable laws. Users will be notified of significant updates via email or service notifications.  </p> <p>Contact Us If you have any questions or concerns about this policy, please contact us at support@amdcloud.kz.  </p>"},{"location":"secure/","title":"Securing SWAG","text":"<p>Warning</p> <p>Little disclaimer. Some information was copied from virtualize.link, because I find information provided by its author useful. Make sure to check the source or star the repo.</p> <p>SWAG is a reverse proxy that allows you to expose your self-hosted apps to the world, but that comes with risks.</p> <p>We can mitigate some risks by fine-tuning SWAG and how we access it:</p> <ul> <li>Prevent accessing some apps via the internet while exposing others.</li> <li>Set up brute-force protection via Crowdsec/Fail2Ban.</li> <li>Set up geoblock to whitelist/blacklist countries via DBIP/Maxmind.</li> <li>Prevent your apps from appearing in search results.</li> <li>Set up SSO via Authelia/Authentik.</li> <li>Monitor SWAG via a dashboard.</li> <li>Access your apps through Wireguard instead of exposing them.</li> </ul>"},{"location":"secure/#requirements","title":"Requirements","text":"<ul> <li>A working instance of SWAG.</li> </ul>"},{"location":"secure/#internal-applications","title":"Internal Applications","text":"<p>Only expose apps you want to share with others and must expose, keep the rest internal and use WireGuard to access them.</p>"},{"location":"secure/#requirements_1","title":"Requirements","text":"<ul> <li>Split DNS - the source IP on requests needs to be local for allow/deny to work properly.</li> </ul> <p>Create a file called <code>nginx/internal.conf</code> with the following configuration:</p> <pre><code>allow 192.168.1.0/24; # Replace with your LAN subnet\ndeny all;\n</code></pre> <p>Utilize the LAN filter in your configuration by adding the following line inside the server block for every application you want to protect.</p> <pre><code>    include /config/nginx/internal.conf;\n</code></pre> <p>Example:</p> <pre><code>server {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    server_name collabora.*;\n    include /config/nginx/ssl.conf;\n    client_max_body_size 0;\n    include /config/nginx/internal.conf;\n\n    location / {\n        include /config/nginx/proxy.conf;\n        include /config/nginx/resolver.conf;\n        set $upstream_app collabora;\n        set $upstream_port 9980;\n        set $upstream_proto https;\n        proxy_pass $upstream_proto://$upstream_app:$upstream_port;\n    }\n}\n</code></pre> <p>Repeat the process for all internal applications.</p>"},{"location":"secure/#brute-force-protection","title":"Brute-Force Protection","text":"<p>Crowdsec and Fail2Ban can prevent brute-force attacks by monitoring the logs of apps and banning IPs that fail multiple login attempts.</p> <p>SWAG comes with Fail2Ban pre-configured with a few basic protections, you can fine-tune it specifically for your apps, or disable it and set up Crowdsec instead.</p>"},{"location":"secure/#crowdsec","title":"Crowdsec","text":"<p>Crowdsec is a free, open-source and collaborative IPS; it's like fail2ban but you share your bans with all of the other users to try and pre-emptively block malicious hosts.</p> <p>Follow this blog post to set it up in SWAG.</p>"},{"location":"secure/#fail2ban","title":"Fail2Ban","text":"<p>Fail2Ban is an intrusion prevention software that protects external applications from brute-force attacks. Attackers that fail to login to your applications a certain number of times will get blocked from accessing all of your applications. Fail2Ban looks for failed login attempts in log files, counts the failed attempts in a short period, and bans the IP address of the attacker.</p>"},{"location":"secure/#the-following-is-an-example-of-setting-up-nextcloud-in-fail2ban-configure-other-apps-in-the-same-way","title":"The following is an example of setting up Nextcloud in Fail2Ban, configure other apps in the same way.","text":"<p>Mount the application logs to SWAG's container by adding a volume for the log to the compose yaml:</p> <pre><code>      - /path/to/nextcloud/logs:/nextcloud:ro\n</code></pre> <p>Note that you should only mount the parent folders, log files can rotate.</p> <p>Recreate the container with the log mount, then create a file called <code>nextcloud.local</code> under <code>fail2ban/filter.d</code>:</p> <pre><code>[Definition]\nfailregex=^.*Login failed: '?.*'? \\(Remote IP: '?&lt;ADDR&gt;'?\\).*$\n          ^.*\\\"remoteAddr\\\":\\\"&lt;ADDR&gt;\\\".*Trusted domain error.*$\nignoreregex =\n</code></pre> <p>Before making your own Fail2Ban filter for apps search online for existing one, most chances someone already made it.</p> <p>The filter containes a pattern by which failed login attempts are matched. Test the pattern by failing to login to nextcloud and look for the entry corresponding to your failed attempt.</p> <pre><code>{\"reqId\":\"k5j5H7K3eskXt3hCLSc4i\",\"level\":2,\"time\":\"2020-10-14T22:56:14+00:00\",\"remoteAddr\":\"1.2.3.4\",\"user\":\"--\",\n\"app\":\"no app in context\",\"method\":\"POST\",\"url\":\"/login\",\"message\":\"Login failed: username (Remote IP: 5.5.5.5)\",\n\"userAgent\":\"Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/5.6.7.8 Mobile \nSafari/537.36\",\"version\":\"19.0.4.2\"}\n</code></pre> <p>Test the pattern in <code>nextcloud.local</code> by running the following command on the docker host:</p> <pre><code>docker exec swag fail2ban-regex /nextcloud/nextcloud.log /config/fail2ban/filter.d/nextcloud.local\n</code></pre> <p>If the pattern works, you will see matches corresponding to the amount of failed login attempts:</p> <pre><code>Lines: 92377 lines, 0 ignored, 2 matched, 92375 missed\n[processed in 7.51 sec]\n</code></pre> <p>The final step is to activate the jail, add the following to <code>fail2ban/jail.local</code>:</p> <pre><code>[nextcloud]\nenabled = true\nport    = http,https\nfilter  = nextcloud\nlogpath = /nextcloud/nextcloud.log\naction  = iptables-allports[name=nextcloud]\n</code></pre> <p>The logpath is slightly different for applications that have multiple log files with dates:</p> <pre><code>[jellyfin]\nenabled  = true\nfilter   = jellyfin\nport     = http,https\nlogpath  = /jellyfin/log*.log\naction   =  iptables-allports[name=jellyfin]\n</code></pre> <p>Repeat the process for every app you expose, you can find Fail2Ban configurations for most applications on the internet.</p> <p>If you need to unban an IP address that was blocked, run the following command on the docker host:</p> <pre><code>docker exec swag fail2ban-client unban &lt;ip address&gt;\n</code></pre>"},{"location":"secure/#geoblock","title":"Geoblock","text":"<p>Geoblock significantly reduces the attack surface of SWAG by restricting access based on countries.</p> <p>Follow the instructions of one of the following mods to set it up:</p> <ul> <li>DBIP mod</li> <li>Maxmind mod</li> </ul> <p>DBIP doesn't require an account, but Maxmind might be more accurate in some cases.</p> <p>Note</p> <p>This this was removed by author, but I simply decided to leave it for personal purpose.</p> <p>The mods come with 3 definitions for <code>$geo-whitelist</code>, <code>$geo-blacklist</code>, <code>$lan-ip</code>.</p> <p>An example for allowing a single country: <pre><code>map $geoip2_data_country_iso_code $geo-whitelist {\n    default no;\n    UK yes; #Replace with your country code list https://dev.maxmind.com/geoip/legacy/codes/iso3166/\n}\n</code></pre> An example for blocking high risk countries: (GilbN's list based on the Spamhaus statistics and Aakamai\u2019s state of the internet report) <pre><code>map $geoip2_data_country_iso_code $geo-blacklist {\n    default yes; #If your country is listed below, remove it from the list\n    CN no; #China\n    RU no; #Russia\n    HK no; #Hong Kong\n    IN no; #India\n    IR no; #Iran\n    VN no; #Vietnam\n    TR no; #Turkey\n    EG no; #Egypt\n    MX no; #Mexico\n    JP no; #Japan\n    KR no; #South Korea\n    KP no; #North Korea\n    PE no; #Peru\n    BR no; #Brazil\n    UA no; #Ukraine\n    ID no; #Indonesia\n    TH no; #Thailand\n }\n</code></pre></p> <p>Utilize the geoblock in your configuration by adding one of the following lines above your location section in every application you want to protect.</p> <p>Note that when using a whitelist filter, you also need to check if the source is a LAN IP, it's not required when using a blacklist filter. <pre><code>    if ($lan-ip = yes) { set $geo-whitelist yes; }\n    if ($geo-whitelist = no) { return 404; }\n</code></pre> Or <pre><code>    if ($geo-blacklist = no) { return 404; }\n</code></pre></p> <p>Example:</p> <pre><code>server {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    server_name authelia.*;\n    include /config/nginx/ssl.conf;\n    client_max_body_size 0;\n\n    if ($lan-ip = yes) { set $geo-whitelist yes; } #Check for a LAN IP\n    if ($geo-whitelist = no) { return 404; } #Check the country filter\n\n    location / {\n        include /config/nginx/proxy.conf;\n        include /config/nginx/resolver.conf;\n        set $upstream_app authelia;\n        set $upstream_port 9091;\n        set $upstream_proto http;\n        proxy_pass $upstream_proto://$upstream_app:$upstream_port;\n    }\n}\n</code></pre> <p>Add the lines to every external application based on your needs.</p>"},{"location":"secure/#search-results","title":"Search Results","text":"<p>You can prevent apps from appearing in search engine results and being crawled by web crawlers. </p> <p>Note that not all search engines and web crawlers respect this tag, but it significantly reduces the amount.</p> <p>Add the following to <code>ssl.conf</code> to enable it on all apps:</p> <pre><code>add_header X-Robots-Tag \"noindex, nofollow, nosnippet, noarchive\";\n</code></pre> <p>To disable on a specific app, add the following line to the app's proxy-conf inside the server tag:</p> <pre><code>add_header X-Robots-Tag \"\";\n</code></pre>"},{"location":"secure/#sso","title":"SSO","text":"<p>Setting up SSO will provide an additional layer of security and protect you against login bypass exploits in apps.</p> <ul> <li>Authelia</li> <li>Authentik</li> </ul> <p>Note that api endpoints shouldn't have SSO for them to function properly.</p>"},{"location":"secure/#monitor","title":"Monitor","text":"<p>Use monitoring solutions such as SWAG Dashboard to keep an eye on the traffic going through SWAG and check for suspicious activity such as:</p> <ul> <li>Many hits from a country unrelated to your users.</li> <li>Many requests to a specific page or static file.</li> <li>Referers that shouldn't refer to your domain.</li> <li>Many hits on status codes that are not 2xx.</li> </ul>"},{"location":"secure/#vpn","title":"VPN","text":"<p>The most effective security you can implement is to stop exposing your apps entirely, and instead access them via WireGuard.</p>"},{"location":"secure/#requirements_2","title":"Requirements","text":"<ul> <li>A working instance of WireGuard.</li> <li>Split DNS - the source IP on requests needs to be local for SWAG to work without being exposed.</li> <li>DNS Validation - allows you to get an SSL certificate without port forwarding.</li> </ul> <p>Once you've set up wireguard, split DNS, and DNS validation, you can remove the port forwarding on your router and remove your domain's public DNS records on your public DNS provider (not the local DNS).</p>"},{"location":"streisand/","title":"Streisand","text":"<p>Streisand is expected to be used on iOS devices only. If you are an Android user, please use the following alternatives: - NekoBox - Amnezia  </p>"},{"location":"streisand/#configuration","title":"Configuration","text":""},{"location":"streisand/#get-the-configuration","title":"Get the configuration","text":"<p>In our case, we use 3x-ui. Log in to the panel and then open the inbounds page. Find the client you need and then click on the QR-code icon.</p>"},{"location":"streisand/#import-configuration-into-streisand","title":"Import configuration into Streisand","text":"<p>In Streisand, there is a \"plus\" icon in the top right corner. Click it and import your configuration in one of the following ways: scan the QR-code or click the QR-code in the panel to copy it to the clipboard, then press \"import from clipboard\" inside the app.</p>"},{"location":"streisand/#connecting","title":"Connecting","text":"<p>Move to the main menu and simply click the big blue toggle button in the center (and select the profile you need in the \"Local servers\" section if you have multiple). iOS will ask for permission to add a profile to the system; you need to grant permission, and then you are good to go.</p>"},{"location":"streisand/#checking-connection","title":"Checking connection","text":"<p>Check the connection by clicking the \"Connected\" or \"Not connected\" button below the toggle button. Verify that there is an IP-address you expected to see.</p>"},{"location":"streisand/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues, refer to the Streisand documentation or seek help from the community.</p>"},{"location":"telegram/","title":"Telegram","text":""},{"location":"web-check/","title":"Web-check","text":"<p>https://github.com/Lissy93/web-check/</p>"},{"location":"wush/","title":"Wush","text":""},{"location":"wush/#who-is-this-wush","title":"Who is this Wush?","text":"<p>Wush - wush is a command line tool that lets you easily transfer files and open shells over a peer-to-peer WireGuard connection. It's similar to magic-wormhole but: </p> <ol> <li>No requirement to set up or trust a relay server for authentication.  </li> <li>Powered by WireGuard for secure, fast, and reliable connections.  </li> <li>Automatic peer-to-peer connections over UDP.  </li> <li>Endless possibilities; rsync, ssh, etc.  </li> </ol>"},{"location":"wush/#commands","title":"Commands","text":"<p>USAGE: </p> <p>Wush subcommand</p> <p>Start the wush server:          </p> <pre><code>wush serve\n</code></pre> <p>Open a shell to the wush host:  </p> <pre><code>wush ssh \n</code></pre> <p>Transfer files to the wush host using rsync:  </p> <pre><code>wush rsync local-file.txt :/path/to/remote/file  \n</code></pre> <p>Copy a single file to the host:  </p> <pre><code>wush cp local-file.txt  \n</code></pre> <p>SUBCOMMANDS: |     Command     |          Meaning           |  |-----------------|----------------------------| | <code>cp</code>            | Transfer files.            |  | <code>port-forward</code>  | Transfer files.            | | <code>rsync</code>         | Transfer files over rsync. |  | <code>serve</code>         | Run the wush server.       | | <code>ssh</code>           | Open a shell.              |  | <code>version</code>       | Show wush version.         | </p> <p>OPTIONS:  </p> <pre><code>wush --version bool \n</code></pre> <p>Print the version and exit.</p>"},{"location":"wush/#install","title":"Install","text":"<p>Download file from Git</p> <p>We tested the program using machines running Windows and Linux (with a GUI).</p> <p>For Windows: Extract the files to a folder and drive of your choice. Files that we will be transferring will be sent to/from there.</p> <p>On Linux, installation is done using the method that works best for you. Files (at least for us) were saved/sent to/from the Home directory.</p>"},{"location":"wush/#how-to-use","title":"How to use","text":"<p>Now let's transfer a PNG file from one machine to another. In our case, Windows will act as the host, and Linux will be the client. To do this, open CMD from the folder where Wush is located. Then, enter the following commands:</p> <p>Obtain the host machine's auth key using the following command: </p> <pre><code>./Wush serve \n</code></pre> <p> Copy <code>Auth key</code></p> <p>Now, on the client machine, enter the command to send the file:</p> <pre><code>wush cp 2.png\n</code></pre> <p> <code>2.png</code> is the file that we want to send from Linux to Windows. </p> <p>In the client console, we paste the key that was obtained earlier on the host machine.</p> <p>How looking it</p> <p></p> <p>Well Done</p>"},{"location":"wush/#ssh","title":"SSH","text":"<p>You can also use Wush for remote access to a machine's console. The connection is also established using an Auth key.</p> <p>Use the following commands:</p> <p>For hosts  </p> <pre><code>Wush serve\n</code></pre> <p>For client </p> <pre><code>Wush ssh\n</code></pre>"},{"location":"wush/#_1","title":"Wush","text":"<p>Source - GitHub Coder-Wush</p>"}]}